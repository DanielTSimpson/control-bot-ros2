import rclpy
from rclpy.node import Node

from std_msgs.msg import String

v = float(1)
omega = float(1)

class MotorCtrl(Node):
    """
    A node that converts desired robot velocity and attitudes into motor signals
    """

    def __init__(self):
        super().__init__('mtr_ctrl')
        self.subscription = self.create_subscription(
            String, 
            'instructions', 
            self.listener_callback,
            10)
        self.subscription

    def listener_callback(self, msg):
        v, omega = msg.data.split('_')
        self.get_logger().info('I heard: {} m/s and {} rad/s'.format(v, omega)) 
    
        mtr1 = v*sin(30)
    	mtr2 = v*cos(30)
    	mtr3 = omega*sin(90)
    	mtr4 = -omega*sin(90)	


def main(args=None):
	
    rclpy.init(args=args)
    
    mtr_ctrl = MotorCtrl()
    
    rclpy.spin(mtr_ctrl)
    
    mtr_ctrl.destroy_node()
    rclpy.shutdown()


if __name__ == '_main_':
	main()
